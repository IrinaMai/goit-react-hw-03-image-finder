{"version":3,"sources":["components/SearchBar.js","components/ImgGallery.js","servises/Api.js","components/Modal.js","components/Button.js","components/Spinner.js","App.js","index.js"],"names":["SearchBar","handleSubmitQuery","useState","querySB","setQuery","className","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","ImgGallery","listImgGallery","modalOpen","onImgClick","lageUrl","dataset","url","map","id","largeImageURL","previewURL","tags","src","data-url","alt","onClick","urlApi","keyApi","fetchApi","query","a","page","axios","get","then","response","data","hits","Modal","modalClose","lageImg","useEffect","window","addEventListener","onEscClose","removeEventListener","code","Button","handleLoadMoreBtn","Spinner","color","height","width","initialState","imgList","modalIsOpen","loadSpinner","lageUrlState","errorState","App","state","setState","scrollTo","top","document","documentElement","scrollHeight","behavior","querySearchBar","prev","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.baf3b461.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nconst SearchBar = ({handleSubmitQuery}) => {\r\n    const [querySB, setQuery] = useState('');\r\n\r\n    const onSubmitQuery = (e) => {\r\n        e.preventDefault();\r\n        handleSubmitQuery(querySB);\r\n        // setQuery('')\r\n    }\r\n\r\n    const onChngQuery = (e) => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    return (\r\n    <header className=\"Searchbar\">\r\n    <form className=\"SearchForm\" onSubmit ={onSubmitQuery}>\r\n    <button type=\"submit\" className=\"SearchForm-button\">\r\n    <span className=\"SearchForm-button-label\">Search</span>\r\n    </button>\r\n\r\n    <input\r\n        className=\"SearchForm-input\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search images and photos\"\r\n        onChange={onChngQuery}\r\n        value={querySB}\r\n    />\r\n    </form>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\n\r\nconst ImgGallery = ({ listImgGallery, modalOpen }) => {\r\n    \r\n    const onImgClick = (e) => {\r\n        const lageUrl = e.target.dataset.url;\r\n        modalOpen(lageUrl)\r\n        // console.log(lageUrl)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {listImgGallery.map(({id, largeImageURL, previewURL, tags}) => {\r\n                return (\r\n                    <li className=\"ImageGalleryItem\"\r\n                        key={id} \r\n                    >\r\n                        <img src={previewURL}\r\n                            data-url={largeImageURL}\r\n                            alt={tags} className=\"ImageGalleryItem-image\"\r\n                            onClick={onImgClick} />\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default ImgGallery","import axios from 'axios';\r\n\r\nconst urlApi = 'https://pixabay.com/api/';\r\nconst keyApi = '19506242-1f89b350085f2df58b37812a8';\r\n\r\nconst fetchApi = async (query, page = 1) => {\r\n    return await axios.get(`${urlApi}?q=${query}&page=${page}&key=${keyApi}&image_type=photo&orientation=horizontal&per_page=12`)\r\n        .then((response) => response.data.hits);\r\n    \r\n}\r\n\r\nexport default fetchApi;\r\n\r\n\r\n  \r\n","import React, { useEffect } from 'react';\r\n\r\n\r\nconst Modal = ({modalClose, lageImg}) => {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', onEscClose)\r\n        return (() => window.removeEventListener('keydown', onEscClose))\r\n    });\r\n\r\n\r\n    const onEscClose = (e) => {\r\n        e.code === 'Escape' && modalClose()\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"Overlay\">\r\n            <div className=\"Modal\">\r\n                <img src={lageImg} alt=\"\" className=\"modalIMG\" />\r\n               \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default Modal","import React from 'react';\r\n\r\nconst Button = ({handleLoadMoreBtn}) => {\r\n    const onClickLoadBtn = () => {\r\n        handleLoadMoreBtn();\r\n    }\r\n\r\n    return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClickLoadBtn}>Load More</button>\r\n    )\r\n}\r\nexport default Button","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spinner = () => {\r\n    \r\nreturn (\r\n<Loader type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} className=\"loadSpinner\" />\r\n);\r\n\r\n\r\n}\r\n\r\nexport default Spinner","import React, {useState, useEffect } from 'react'\nimport SearchBar from './components/SearchBar';\nimport ImgGallery from './components/ImgGallery';\nimport fetchApi from './servises/Api';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport Spinner from './components/Spinner';\n\n\nconst initialState = {\n  query: '',\n  page: 1,\n  imgList: [],\n  modalIsOpen: false,\n  loadSpinner: false,\n  lageUrlState: '',\n  errorState: '',\n};\n\nfunction App() {\n  const [state, setState] = useState({ ...initialState });\n  \n  useEffect(() => {\n        window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n        });\n  }, [state.page])\n \n  const handleSubmitQuery = (querySearchBar) => {\n\n    if (querySearchBar) {\n      setState(prev => ({ ...prev, loadSpinner: true }))\n      fetchApi(querySearchBar)\n        .then((response) => { \n          setState(prev => ({\n            ...prev, imgList: [...response],\n            query: querySearchBar, page: 2, loadSpinner: false\n          }))\n        })\n    }\n\n  };\n\n  const handleLoadMoreBtn = () => {\n    setState(prev => ({ ...prev, loadSpinner: true }))\n\n    fetchApi(state.query, state.page)\n      .then((response) => { setState(prev => ({ ...prev, imgList: [...prev.imgList, ...response], page: prev.page + 1, loadSpinner: false })) })\n  }\n\n  const modalOpen = (lageUrl) => {\n    setState(prev => ({ ...prev, modalIsOpen: true, lageUrlState: lageUrl}))\n  };\n\n  const modalClose = () => {\n    setState(prev => ({ ...prev, modalIsOpen: false }))\n  }\n \n\n  return (\n    <>\n      <SearchBar\n        handleSubmitQuery={handleSubmitQuery} />\n      {state.imgList.length>0 &&\n        <ImgGallery listImgGallery={state.imgList} modalOpen={modalOpen} />}\n        {state.loadSpinner && <Spinner/>}\n      {state.imgList.length>0 &&\n        <Button handleLoadMoreBtn={handleLoadMoreBtn} />}\n\n      {state.modalIsOpen && <Modal modalClose={modalClose} lageImg={state.lageUrlState} />}\n    </>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}